# To do
# 1. Add control for how many threads during make
# 2. Add control for building as shared or static
# 3. Add control for what OS build and thus which threading library (pthread/windows)

DEBUG_FOLDER="debug-concurrent_routines-cpu"
RELEASE_FOLDER="release-concurrent_routines-cpu"
MAX_THREADS=$(nproc) # to speed up make

if [ "$#" == "0" ]
then
printf "USAGE: $0 <some valid number list below>\n"
printf "0: Erase ${DEBUG_FOLDER}\n"
printf "1: Erase ${RELEASE_FOLDER}\n"
printf "2: Build ${DEBUG_FOLDER}\n"
printf "3: Build ${RELEASE_FOLDER}\n"
#possible future options here
fi

# if total number of cmd args is 1 and the first of them is zero
if [[ "$#" == "1" && "$1" == "0" ]] ; then
  printf "Removing ${DEBUG_FOLDER}\n"
  rm -rf ${DEBUG_FOLDER}
fi

# if total number of cmd args is 1 and the first of them is one
if [[ "$#" == "1" && "$1" == "1" ]] ; then
  printf "Removing ${RELEASE_FOLDER}\n"
  rm -rf ${RELEASE_FOLDER}
fi

# if total number of cmd args is 1 and the first of them is two
if [[ "$#" == "1" && "$1" == "2" ]] ; then
  printf "Proceding with cmake\n"
  mkdir -p ${DEBUG_FOLDER} && cd $_
  cmake -DCMAKE_BUILD_TYPE=DEBUG -DBuildCuda=OFF ..
  make -j $MAX_THREADS
  make -j $MAX_THREADS concurrent_routines_coverage
  # strip extraneous files
  lcov --remove concurrent_routines_coverage.info "/usr/include/*" "$PWD/googlebench-src/*" "$PWD/googletest-src/*" -o concurrent_routines_coverage.info
  printf "Finished make\n"
fi

# if total number of cmd args is 1 and the first of them is three
if [[ "$#" == "1" && "$1" == "3" ]] ; then
  printf "Proceding with cmake\n"
  mkdir -p ${RELEASE_FOLDER} && cd $_
  cmake -DCMAKE_BUILD_TYPE=RELEASE -DBuildCuda=OFF ..
  make -j $MAX_THREADS
  printf "Finished make\n"
fi
